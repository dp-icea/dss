# Brings up a full stand-alone DSS sandbox environment with locally-built dss InterUSS images.

# To bring up this system, see standalone_instance.md.

services:
  local-dss-crdb:
    image: cockroachdb/cockroach:v21.2.7
    command: start-single-node --insecure
    ports:
      - '26257:26257'
      - '8080:8080'
    restart: always
    networks:
      - dss_sandbox_default_network

  local-dss-rid-bootstrapper:
    build:
      context: ../..
      dockerfile: Dockerfile
    image: interuss-local/dss
    volumes:
      - local-dss-data:/var/local-dss-data
      - $PWD/startup:/startup:ro
    entrypoint: /startup/rid_bootstrapper.sh
    depends_on:
      - local-dss-crdb
    networks:
      - dss_sandbox_default_network

  local-dss-scd-bootstrapper:
    build:
      context: ../..
      dockerfile: Dockerfile
    image: interuss-local/dss
    volumes:
      - local-dss-data:/var/local-dss-data
      - $PWD/startup:/startup:ro
    entrypoint: /startup/scd_bootstrapper.sh
    depends_on:
      - local-dss-crdb
    networks:
      - dss_sandbox_default_network

  local-dss-core-service:
    build:
      context: ../..
      dockerfile: Dockerfile
    restart: on-failure:3
    image: interuss-local/dss
    volumes:
      - $PWD/../test-certs:/var/test-certs:ro
      - local-dss-data:/var/local-dss-data
      - $PWD/startup:/startup:ro
    command: /startup/core_service.sh ${DEBUG_ON:-0}
    logging:
      driver: fluentd
      options:
        tag: dss-api
    ports:
      - '4000:4000'
      - '8082:8082'
    depends_on:
      - local-dss-rid-bootstrapper
      - local-dss-scd-bootstrapper
    networks:
      - dss_sandbox_default_network

networks:
  dss_sandbox_default_network:
    name: dss_sandbox-default

volumes:
  local-dss-data:
